#+Author: J. Dylan White
#+Title: Southern Oscillation Index (SOI)

* Introduction

The El Nino Southern Oscillation (ENSO) is a periodic transition of sea surface temperatures and overlying air pressure over the tropical Pacific Ocean. The phases are referred to as El Nino and La Nina and are so named due the the typical transition from one phase to another taking place during the end of year near Christmas time, and was originally named by Roman Catholic inhabitants in western South America as a reference to the birth of Jesus.

This oscillation is indexed using many different measurements, but a primary measurement is the sea level pressure difference between Darwin, Australia and Tahiti, and is specifically quantized using the [[https://www.ncei.noaa.gov/access/monitoring/enso/soi/][Southern Oscillation Index (SOI)]]. El Nino is associated with prolonged periods of warm ocean waters across the eastern tropical Pacific Ocean, while La Nina is oppositely associated with prolonged periods of cool ocean waters across the easter tropical Pacific Ocean. These phases are however are strongly related to atmospheric trends worldwide, referred to as [[https://www.weather.gov/fwd/teleconnections][ENSO Teleconnections]].

* Download and Visualize SOI Data

Let's start by having a look at the ENSO data. NOAA [[https://www.cpc.ncep.noaa.gov/data/indices/soi][provides the SOI]] as monthly values, so let's download that data. It comes in two chunks; 1) anomaly SOI values and 2) standardized SOI values. We want the second chunk of data.

#+begin_src python :session *py* :results value table

  # Import modules
  import requests
  import pandas as pd
  import io
  import seaborn as sns
  import matplotlib.pyplot as plt

  # Set the SOI data URL
  url = "https://www.cpc.ncep.noaa.gov/data/indices/soi"

  # Fetch the SOI data
  res = requests.get(url)

  # Decode data
  data = io.StringIO(res.content.decode('utf-8').replace('-999.9',' '))

  # Load data as a dataframe
  soi_df = pd.read_csv(
      data,
      delimiter=' ',
      skiprows=range(87),
      header=0,
      skipinitialspace=True,
      na_values=' ').drop('Unnamed: 13',axis=1)
  soi_df.head()

#+end_src

#+RESULTS:
|   |   YEAR |  JAN |  FEB |  MAR |  APR |  MAY | JUN |  JUL |  AUG |  SEP |  OCT |  NOV |  DEC |
|---+--------+------+------+------+------+------+-----+------+------+------+------+------+------|
| 0 | 1951.0 |  1.5 |  0.9 | -0.1 | -0.3 | -0.7 | 0.2 | -1.0 | -0.2 | -1.1 | -1.0 | -0.8 | -0.7 |
| 1 | 1952.0 | -0.9 | -0.6 |  0.5 | -0.2 |  0.8 | 0.7 |  0.5 |  0.1 | -0.2 |  0.4 |  0.0 | -1.2 |
| 2 | 1953.0 |  0.3 | -0.5 | -0.2 |  0.2 | -1.7 | 0.1 | -0.0 | -1.2 | -1.2 |  0.1 | -0.3 | -0.5 |
| 3 | 1954.0 |  0.7 | -0.3 |  0.3 |  0.6 |  0.5 | 0.1 |  0.4 |  1.1 |  0.2 |  0.3 |  0.1 |  1.4 |
| 4 | 1955.0 | -0.5 |  1.9 |  0.6 | -0.1 |  1.0 | 1.3 |  1.6 |  1.5 |  1.3 |  1.5 |  1.2 |  1.0 |

For plotting, let's make convert the data from wide to long, and then give each month a designation of "La Nina" if the SOI is positive or "El Nino" if the SOI is negative for each month.

#+begin_src python :session *py* :results value table

  # Convert data from wide to long
  soi_df.columns = soi_df.columns[[0]].tolist() + list(range(1,13))
  soi_df = soi_df.melt('YEAR')
  soi_df = soi_df.rename(columns={'YEAR':'Year','variable':'Month','value':'SOI'})
  soi_df["Month"] = soi_df["Month"].astype(str).str.zfill(2)

  # Add a YYYY-MM date column and sort by it 
  soi_df['Date'] = soi_df[['Year','Month']].astype(str).agg('-'.join, 1)
  soi_df = soi_df.sort_values("Date").reset_index().drop('index',axis=1)

  # Get the ENSO Phase based on the SOI for each month
  soi_df["ENSO Phase"] = soi_df["SOI"].apply(lambda x: "El Nino" if x<0 else "La Nina")
  soi_df = soi_df.dropna()

  # Write results to file
  soi_df.to_csv("./data/soi.csv",index=False)
  
  soi_df.head()

#+end_src

#+RESULTS:
|   | Year | Month |  SOI |    Date | ENSO Phase |
|---+------+-------+------+---------+------------|
| 0 | 1951 |    01 |  1.5 | 1951-01 | La Nina    |
| 1 | 1951 |    02 |  0.9 | 1951-02 | La Nina    |
| 2 | 1951 |    03 | -0.1 | 1951-03 | El Nino    |
| 3 | 1951 |    04 | -0.3 | 1951-04 | El Nino    |
| 4 | 1951 |    05 | -0.7 | 1951-05 | El Nino    |

Finally, let's plot the data. We'll shade El Nino values as red and La Nina values as blue.

#+begin_src python :session *py* :results value file

  # Create plot showing SOI
  fig, ax = plt.subplots(figsize=(8,6))
  bar_plot = sns.barplot(soi_df,x="Date",y="SOI",hue="ENSO Phase",palette=["blue","red"])
  plt.xticks(rotation=45)
  plt.xticks(soi_df['Date'].to_list()[::60])

  # Save the figure
  file_name = 'images/soi.png'
  plt.title("Historical Southern Oscillation Index")
  plt.tight_layout()
  plt.savefig(file_name) 
  file_name

#+end_src

#+RESULTS:
[[file:images/soi.png]]
